<testsuite failures="0" name="com/co/gorest/users/feature/users.feature" skipped="0" tests="7" time="8.314428"><testcase classname="com.co.gorest.users.feature.users" name="1 - Validar el listado completo de los usuarios registrados" time="0.529793"><system-out>* url baseUrl ............................................................. passed
* path '/users' ........................................................... passed
* def randomEmail = call read('classpath:com/co/gorest/utils/functionJS/RandomEmail.js') . passed
* def dataRequest = read('classpath:com/co/gorest/users/request/usersRequest.json') . passed
* def dataResponse = read('classpath:com/co/gorest/users/response/responseUsers.json') . passed
When method get ........................................................... passed
Then status 200 ........................................................... passed
</system-out></testcase>
<testcase classname="com.co.gorest.users.feature.users" name="2 - Creacion exitosa de un usario" time="0.512434"><system-out>* url baseUrl ............................................................. passed
* path '/users' ........................................................... passed
* def randomEmail = call read('classpath:com/co/gorest/utils/functionJS/RandomEmail.js') . passed
* def dataRequest = read('classpath:com/co/gorest/users/request/usersRequest.json') . passed
* def dataResponse = read('classpath:com/co/gorest/users/response/responseUsers.json') . passed
* print 'El correo es: ' +randomEmail ..................................... passed
Given header Authorization = 'Bearer ' + accessToken ...................... passed
And request dataRequest.createUser ........................................ passed
When method post .......................................................... passed
Then status 201 ........................................................... passed
And match response == dataResponse.responseUserCreated .................... passed
And assert responseTime &lt;= 5000 ........................................... passed
* def idUserCreated = response.id ......................................... passed
* def emailUser = response.email .......................................... passed
* print idUserCreated ..................................................... passed
</system-out></testcase>
<testcase classname="com.co.gorest.users.feature.users" name="3 - Modificacion exitosa de un usario" time="2.067686"><system-out>* url baseUrl ............................................................. passed
* path '/users' ........................................................... passed
* def randomEmail = call read('classpath:com/co/gorest/utils/functionJS/RandomEmail.js') . passed
* def dataRequest = read('classpath:com/co/gorest/users/request/usersRequest.json') . passed
* def dataResponse = read('classpath:com/co/gorest/users/response/responseUsers.json') . passed
* def createUser = call read('classpath:com/co/gorest/users/feature/users.feature@createUser') . passed
* def idUserCreated = createUser.idUserCreated ............................ passed
Given path + idUserCreated ................................................ passed
And header Authorization = 'Bearer ' + accessToken ........................ passed
And request dataRequest.updateUser ........................................ passed
When method patch ......................................................... passed
Then status 200 ........................................................... passed
And match response == dataResponse.responseUserUpdated .................... passed
And assert responseTime &lt;= 5000 ........................................... passed
</system-out></testcase>
<testcase classname="com.co.gorest.users.feature.users" name="4 - EliminaciÃ³n exitosa de un usario" time="2.059766"><system-out>* url baseUrl ............................................................. passed
* path '/users' ........................................................... passed
* def randomEmail = call read('classpath:com/co/gorest/utils/functionJS/RandomEmail.js') . passed
* def dataRequest = read('classpath:com/co/gorest/users/request/usersRequest.json') . passed
* def dataResponse = read('classpath:com/co/gorest/users/response/responseUsers.json') . passed
* def createUser = call read('classpath:com/co/gorest/users/feature/users.feature@createUser') . passed
* def idUserCreated = createUser.idUserCreated ............................ passed
Given path + idUserCreated ................................................ passed
And header Authorization = 'Bearer ' + accessToken ........................ passed
When method delete ........................................................ passed
Then status 204 ........................................................... passed
And assert responseTime &lt;= 5000 ........................................... passed
</system-out></testcase>
<testcase classname="com.co.gorest.users.feature.users" name="5 - Consulta de un usuario previamente creado" time="1.620501"><system-out>* url baseUrl ............................................................. passed
* path '/users' ........................................................... passed
* def randomEmail = call read('classpath:com/co/gorest/utils/functionJS/RandomEmail.js') . passed
* def dataRequest = read('classpath:com/co/gorest/users/request/usersRequest.json') . passed
* def dataResponse = read('classpath:com/co/gorest/users/response/responseUsers.json') . passed
* def createUser = call read('classpath:com/co/gorest/users/feature/users.feature@createUser') . passed
* def idUserCreated = createUser.response.id .............................. passed
Given path + idUserCreated ................................................ passed
And header Authorization = 'Bearer ' + accessToken ........................ passed
When method get ........................................................... passed
Then status 200 ........................................................... passed
And assert responseTime &lt;= 5000 ........................................... passed
And match response.id == createUser.response.id ........................... passed
And match response.name == createUser.response.name ....................... passed
And match response.email == createUser.response.email ..................... passed
And match response.gender == createUser.response.gender ................... passed
And match response.status == createUser.response.status ................... passed
</system-out></testcase>
<testcase classname="com.co.gorest.users.feature.users" name="6 - Consulta de un usuario no registrado" time="0.466718"><system-out>* url baseUrl ............................................................. passed
* path '/users' ........................................................... passed
* def randomEmail = call read('classpath:com/co/gorest/utils/functionJS/RandomEmail.js') . passed
* def dataRequest = read('classpath:com/co/gorest/users/request/usersRequest.json') . passed
* def dataResponse = read('classpath:com/co/gorest/users/response/responseUsers.json') . passed
Given path + '1010' ....................................................... passed
When method get ........................................................... passed
Then status 404 ........................................................... passed
And assert responseTime &lt;= 5000 ........................................... passed
And match response == dataResponse.ResponseUserNotRegister ................ passed
</system-out></testcase>
<testcase classname="com.co.gorest.users.feature.users" name="7 - Creacion de un usuario con email repetido" time="1.057531"><system-out>* url baseUrl ............................................................. passed
* path '/users' ........................................................... passed
* def randomEmail = call read('classpath:com/co/gorest/utils/functionJS/RandomEmail.js') . passed
* def dataRequest = read('classpath:com/co/gorest/users/request/usersRequest.json') . passed
* def dataResponse = read('classpath:com/co/gorest/users/response/responseUsers.json') . passed
Given header Authorization = 'Bearer ' + accessToken ...................... passed
And request dataRequest.createExistUser ................................... passed
And retry until responseStatus == 422 ..................................... passed
When method post .......................................................... passed
Then status 422 ........................................................... passed
And assert responseTime &lt;= 5000 ........................................... passed
And match response == dataResponse.responseEmailExists .................... passed
</system-out></testcase>
</testsuite>